---
- hosts: all
  # connection: local
  vars:
    username: vagrant
    group: "{{ usergroup }}"
    home: "/home/{{ username }}"
    src_home: "{{ home }}/repos"
    intellij_version: "IdeaIC2024.1"
  user: "{{ username }}"
  tasks:
    - name: "create folders"
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ username }}"
        group: "{{ group }}"
      with_items:
        - "{{ home }}/.m2"
        - "{{ home }}/.{{ intellij_version }}"
        - "{{ home }}/.vim"
        - "{{ home }}/.vim/bundle"
        - "{{ src_home }}"
    - name: clone my dotfiles
      git:
        dest: "{{ home }}/.config"
        repo: https://github.com/thomas-melville/.config.git
    - name: make kubectl executable
      shell: chmod +x /usr/local/bin/kubectl
      become: true
      become_user: root
    - name: enable kubectl auto completion
      shell: 'echo "source <(kubectl completion bash)" >> $HOME/.bashrc'
    - name: source my bashrc file in ~/.bashrc
      shell: 'echo "source $HOME/.config/.bashrc" >> $HOME/.bashrc'
    - name: create symbolic link for my vimrc file
      file:
        src: "{{ home }}/.config/vim/vimrc"
        dest: "{{ home }}/.vimrc"
        state: link
        force: yes
    - name: pull down my notes
      git:
        dest: "{{ src_home }}/myNotes"
        repo: https://github.com/thomas-melville/myNotes.git
    - name: copy settings.xml file for maven
      copy:
        src: settings.xml
        dest: "{{ home }}/.m2/settings.xml"
    - name: intellij config
      unarchive:
        src: intellij-config.tar.gz
        dest: "{{ home }}/.{{ intellij_version }}/"
    - name: update cron with entry to clear .m2/repository once a week
      cron:
        name: "clear m2"
        minute: 0
        hour: 11
        weekday: 2
        job: "rm -rf {{ home }}/.m2/repository/*"
    - name: install vim-gitgutter plugin
      git:
        dest: "{{ home }}/.vim/bundle"
        repo: https://github.com/airblade/vim-gitgutter.git
    - name: add user to docker group
      shell: "usermod -aG docker {{ username }}"
      become: true
      become_user: root
